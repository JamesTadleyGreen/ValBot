# coding: utf-8
#
# Created by David Hargat.
# Copyright Â© 2017 Giphy. All rights reserved.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

"""
    giphy-api

    Giphy's public api.

    OpenAPI spec version: 0.9.3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class RandomGif(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, type='gif', id=None, url=None, image_original_url=None, image_url=None, image_mp4_url=None, image_frames=None, image_width=None, image_height=None, fixed_height_downsampled_url=None, fixed_height_downsampled_width=None, fixed_height_downsampled_height=None, fixed_width_downsampled_url=None, fixed_width_downsampled_width=None, fixed_width_downsampled_height=None, fixed_height_small_url=None, fixed_height_small_still_url=None, fixed_height_small_width=None, fixed_height_small_height=None, fixed_width_small_url=None, fixed_width_small_still_url=None, fixed_width_small_width=None, fixed_width_small_height=None):
        """
        RandomGif - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'type': 'str',
            'id': 'str',
            'url': 'str',
            'image_original_url': 'str',
            'image_url': 'str',
            'image_mp4_url': 'str',
            'image_frames': 'str',
            'image_width': 'str',
            'image_height': 'str',
            'fixed_height_downsampled_url': 'str',
            'fixed_height_downsampled_width': 'str',
            'fixed_height_downsampled_height': 'str',
            'fixed_width_downsampled_url': 'str',
            'fixed_width_downsampled_width': 'str',
            'fixed_width_downsampled_height': 'str',
            'fixed_height_small_url': 'str',
            'fixed_height_small_still_url': 'str',
            'fixed_height_small_width': 'str',
            'fixed_height_small_height': 'str',
            'fixed_width_small_url': 'str',
            'fixed_width_small_still_url': 'str',
            'fixed_width_small_width': 'str',
            'fixed_width_small_height': 'str'
        }

        self.attribute_map = {
            'type': 'type',
            'id': 'id',
            'url': 'url',
            'image_original_url': 'image_original_url',
            'image_url': 'image_url',
            'image_mp4_url': 'image_mp4_url',
            'image_frames': 'image_frames',
            'image_width': 'image_width',
            'image_height': 'image_height',
            'fixed_height_downsampled_url': 'fixed_height_downsampled_url',
            'fixed_height_downsampled_width': 'fixed_height_downsampled_width',
            'fixed_height_downsampled_height': 'fixed_height_downsampled_height',
            'fixed_width_downsampled_url': 'fixed_width_downsampled_url',
            'fixed_width_downsampled_width': 'fixed_width_downsampled_width',
            'fixed_width_downsampled_height': 'fixed_width_downsampled_height',
            'fixed_height_small_url': 'fixed_height_small_url',
            'fixed_height_small_still_url': 'fixed_height_small_still_url',
            'fixed_height_small_width': 'fixed_height_small_width',
            'fixed_height_small_height': 'fixed_height_small_height',
            'fixed_width_small_url': 'fixed_width_small_url',
            'fixed_width_small_still_url': 'fixed_width_small_still_url',
            'fixed_width_small_width': 'fixed_width_small_width',
            'fixed_width_small_height': 'fixed_width_small_height'
        }

        self._type = type
        self._id = id
        self._url = url
        self._image_original_url = image_original_url
        self._image_url = image_url
        self._image_mp4_url = image_mp4_url
        self._image_frames = image_frames
        self._image_width = image_width
        self._image_height = image_height
        self._fixed_height_downsampled_url = fixed_height_downsampled_url
        self._fixed_height_downsampled_width = fixed_height_downsampled_width
        self._fixed_height_downsampled_height = fixed_height_downsampled_height
        self._fixed_width_downsampled_url = fixed_width_downsampled_url
        self._fixed_width_downsampled_width = fixed_width_downsampled_width
        self._fixed_width_downsampled_height = fixed_width_downsampled_height
        self._fixed_height_small_url = fixed_height_small_url
        self._fixed_height_small_still_url = fixed_height_small_still_url
        self._fixed_height_small_width = fixed_height_small_width
        self._fixed_height_small_height = fixed_height_small_height
        self._fixed_width_small_url = fixed_width_small_url
        self._fixed_width_small_still_url = fixed_width_small_still_url
        self._fixed_width_small_width = fixed_width_small_width
        self._fixed_width_small_height = fixed_width_small_height

    @property
    def type(self):
        """
        Gets the type of this RandomGif.
        By default, this is almost always gif

        :return: The type of this RandomGif.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """
        Sets the type of this RandomGif.
        By default, this is almost always gif

        :param type: The type of this RandomGif.
        :type: str
        """

        self._type = type

    @property
    def id(self):
        """
        Gets the id of this RandomGif.
        This GIF's unique ID

        :return: The id of this RandomGif.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this RandomGif.
        This GIF's unique ID

        :param id: The id of this RandomGif.
        :type: str
        """

        self._id = id

    @property
    def url(self):
        """
        Gets the url of this RandomGif.
        The URL for this preview GIF.

        :return: The url of this RandomGif.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """
        Sets the url of this RandomGif.
        The URL for this preview GIF.

        :param url: The url of this RandomGif.
        :type: str
        """

        self._url = url

    @property
    def image_original_url(self):
        """
        Gets the image_original_url of this RandomGif.
        The URL for the original preview GIF.

        :return: The image_original_url of this RandomGif.
        :rtype: str
        """
        return self._image_original_url

    @image_original_url.setter
    def image_original_url(self, image_original_url):
        """
        Sets the image_original_url of this RandomGif.
        The URL for the original preview GIF.

        :param image_original_url: The image_original_url of this RandomGif.
        :type: str
        """

        self._image_original_url = image_original_url

    @property
    def image_url(self):
        """
        Gets the image_url of this RandomGif.
        The URL for this preview GIF.

        :return: The image_url of this RandomGif.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """
        Sets the image_url of this RandomGif.
        The URL for this preview GIF.

        :param image_url: The image_url of this RandomGif.
        :type: str
        """

        self._image_url = image_url

    @property
    def image_mp4_url(self):
        """
        Gets the image_mp4_url of this RandomGif.
        The URL for this preview GIF.

        :return: The image_mp4_url of this RandomGif.
        :rtype: str
        """
        return self._image_mp4_url

    @image_mp4_url.setter
    def image_mp4_url(self, image_mp4_url):
        """
        Sets the image_mp4_url of this RandomGif.
        The URL for this preview GIF.

        :param image_mp4_url: The image_mp4_url of this RandomGif.
        :type: str
        """

        self._image_mp4_url = image_mp4_url

    @property
    def image_frames(self):
        """
        Gets the image_frames of this RandomGif.
        The number of frames in this GIF.

        :return: The image_frames of this RandomGif.
        :rtype: str
        """
        return self._image_frames

    @image_frames.setter
    def image_frames(self, image_frames):
        """
        Sets the image_frames of this RandomGif.
        The number of frames in this GIF.

        :param image_frames: The image_frames of this RandomGif.
        :type: str
        """

        self._image_frames = image_frames

    @property
    def image_width(self):
        """
        Gets the image_width of this RandomGif.
        The width of this GIF.

        :return: The image_width of this RandomGif.
        :rtype: str
        """
        return self._image_width

    @image_width.setter
    def image_width(self, image_width):
        """
        Sets the image_width of this RandomGif.
        The width of this GIF.

        :param image_width: The image_width of this RandomGif.
        :type: str
        """

        self._image_width = image_width

    @property
    def image_height(self):
        """
        Gets the image_height of this RandomGif.
        The height of this GIF.

        :return: The image_height of this RandomGif.
        :rtype: str
        """
        return self._image_height

    @image_height.setter
    def image_height(self, image_height):
        """
        Sets the image_height of this RandomGif.
        The height of this GIF.

        :param image_height: The image_height of this RandomGif.
        :type: str
        """

        self._image_height = image_height

    @property
    def fixed_height_downsampled_url(self):
        """
        Gets the fixed_height_downsampled_url of this RandomGif.
        A version of this GIF with a fixed height of 200 pixels and the number of frames reduced to 6.

        :return: The fixed_height_downsampled_url of this RandomGif.
        :rtype: str
        """
        return self._fixed_height_downsampled_url

    @fixed_height_downsampled_url.setter
    def fixed_height_downsampled_url(self, fixed_height_downsampled_url):
        """
        Sets the fixed_height_downsampled_url of this RandomGif.
        A version of this GIF with a fixed height of 200 pixels and the number of frames reduced to 6.

        :param fixed_height_downsampled_url: The fixed_height_downsampled_url of this RandomGif.
        :type: str
        """

        self._fixed_height_downsampled_url = fixed_height_downsampled_url

    @property
    def fixed_height_downsampled_width(self):
        """
        Gets the fixed_height_downsampled_width of this RandomGif.

        :return: The fixed_height_downsampled_width of this RandomGif.
        :rtype: str
        """
        return self._fixed_height_downsampled_width

    @fixed_height_downsampled_width.setter
    def fixed_height_downsampled_width(self, fixed_height_downsampled_width):
        """
        Sets the fixed_height_downsampled_width of this RandomGif.

        :param fixed_height_downsampled_width: The fixed_height_downsampled_width of this RandomGif.
        :type: str
        """

        self._fixed_height_downsampled_width = fixed_height_downsampled_width

    @property
    def fixed_height_downsampled_height(self):
        """
        Gets the fixed_height_downsampled_height of this RandomGif.

        :return: The fixed_height_downsampled_height of this RandomGif.
        :rtype: str
        """
        return self._fixed_height_downsampled_height

    @fixed_height_downsampled_height.setter
    def fixed_height_downsampled_height(self, fixed_height_downsampled_height):
        """
        Sets the fixed_height_downsampled_height of this RandomGif.

        :param fixed_height_downsampled_height: The fixed_height_downsampled_height of this RandomGif.
        :type: str
        """

        self._fixed_height_downsampled_height = fixed_height_downsampled_height

    @property
    def fixed_width_downsampled_url(self):
        """
        Gets the fixed_width_downsampled_url of this RandomGif.
        A version of this GIF with a fixed width of 200 pixels and the number of frames reduced to 6.

        :return: The fixed_width_downsampled_url of this RandomGif.
        :rtype: str
        """
        return self._fixed_width_downsampled_url

    @fixed_width_downsampled_url.setter
    def fixed_width_downsampled_url(self, fixed_width_downsampled_url):
        """
        Sets the fixed_width_downsampled_url of this RandomGif.
        A version of this GIF with a fixed width of 200 pixels and the number of frames reduced to 6.

        :param fixed_width_downsampled_url: The fixed_width_downsampled_url of this RandomGif.
        :type: str
        """

        self._fixed_width_downsampled_url = fixed_width_downsampled_url

    @property
    def fixed_width_downsampled_width(self):
        """
        Gets the fixed_width_downsampled_width of this RandomGif.

        :return: The fixed_width_downsampled_width of this RandomGif.
        :rtype: str
        """
        return self._fixed_width_downsampled_width

    @fixed_width_downsampled_width.setter
    def fixed_width_downsampled_width(self, fixed_width_downsampled_width):
        """
        Sets the fixed_width_downsampled_width of this RandomGif.

        :param fixed_width_downsampled_width: The fixed_width_downsampled_width of this RandomGif.
        :type: str
        """

        self._fixed_width_downsampled_width = fixed_width_downsampled_width

    @property
    def fixed_width_downsampled_height(self):
        """
        Gets the fixed_width_downsampled_height of this RandomGif.

        :return: The fixed_width_downsampled_height of this RandomGif.
        :rtype: str
        """
        return self._fixed_width_downsampled_height

    @fixed_width_downsampled_height.setter
    def fixed_width_downsampled_height(self, fixed_width_downsampled_height):
        """
        Sets the fixed_width_downsampled_height of this RandomGif.

        :param fixed_width_downsampled_height: The fixed_width_downsampled_height of this RandomGif.
        :type: str
        """

        self._fixed_width_downsampled_height = fixed_width_downsampled_height

    @property
    def fixed_height_small_url(self):
        """
        Gets the fixed_height_small_url of this RandomGif.
        A version of this GIF with a fixed height of 100 pixels and the number of frames reduced to 6.

        :return: The fixed_height_small_url of this RandomGif.
        :rtype: str
        """
        return self._fixed_height_small_url

    @fixed_height_small_url.setter
    def fixed_height_small_url(self, fixed_height_small_url):
        """
        Sets the fixed_height_small_url of this RandomGif.
        A version of this GIF with a fixed height of 100 pixels and the number of frames reduced to 6.

        :param fixed_height_small_url: The fixed_height_small_url of this RandomGif.
        :type: str
        """

        self._fixed_height_small_url = fixed_height_small_url

    @property
    def fixed_height_small_still_url(self):
        """
        Gets the fixed_height_small_still_url of this RandomGif.
        A still version of this gif.

        :return: The fixed_height_small_still_url of this RandomGif.
        :rtype: str
        """
        return self._fixed_height_small_still_url

    @fixed_height_small_still_url.setter
    def fixed_height_small_still_url(self, fixed_height_small_still_url):
        """
        Sets the fixed_height_small_still_url of this RandomGif.
        A still version of this gif.

        :param fixed_height_small_still_url: The fixed_height_small_still_url of this RandomGif.
        :type: str
        """

        self._fixed_height_small_still_url = fixed_height_small_still_url

    @property
    def fixed_height_small_width(self):
        """
        Gets the fixed_height_small_width of this RandomGif.

        :return: The fixed_height_small_width of this RandomGif.
        :rtype: str
        """
        return self._fixed_height_small_width

    @fixed_height_small_width.setter
    def fixed_height_small_width(self, fixed_height_small_width):
        """
        Sets the fixed_height_small_width of this RandomGif.

        :param fixed_height_small_width: The fixed_height_small_width of this RandomGif.
        :type: str
        """

        self._fixed_height_small_width = fixed_height_small_width

    @property
    def fixed_height_small_height(self):
        """
        Gets the fixed_height_small_height of this RandomGif.

        :return: The fixed_height_small_height of this RandomGif.
        :rtype: str
        """
        return self._fixed_height_small_height

    @fixed_height_small_height.setter
    def fixed_height_small_height(self, fixed_height_small_height):
        """
        Sets the fixed_height_small_height of this RandomGif.

        :param fixed_height_small_height: The fixed_height_small_height of this RandomGif.
        :type: str
        """

        self._fixed_height_small_height = fixed_height_small_height

    @property
    def fixed_width_small_url(self):
        """
        Gets the fixed_width_small_url of this RandomGif.

        :return: The fixed_width_small_url of this RandomGif.
        :rtype: str
        """
        return self._fixed_width_small_url

    @fixed_width_small_url.setter
    def fixed_width_small_url(self, fixed_width_small_url):
        """
        Sets the fixed_width_small_url of this RandomGif.

        :param fixed_width_small_url: The fixed_width_small_url of this RandomGif.
        :type: str
        """

        self._fixed_width_small_url = fixed_width_small_url

    @property
    def fixed_width_small_still_url(self):
        """
        Gets the fixed_width_small_still_url of this RandomGif.
        A still version of this GIF with a fixed width of 100 pixels.

        :return: The fixed_width_small_still_url of this RandomGif.
        :rtype: str
        """
        return self._fixed_width_small_still_url

    @fixed_width_small_still_url.setter
    def fixed_width_small_still_url(self, fixed_width_small_still_url):
        """
        Sets the fixed_width_small_still_url of this RandomGif.
        A still version of this GIF with a fixed width of 100 pixels.

        :param fixed_width_small_still_url: The fixed_width_small_still_url of this RandomGif.
        :type: str
        """

        self._fixed_width_small_still_url = fixed_width_small_still_url

    @property
    def fixed_width_small_width(self):
        """
        Gets the fixed_width_small_width of this RandomGif.

        :return: The fixed_width_small_width of this RandomGif.
        :rtype: str
        """
        return self._fixed_width_small_width

    @fixed_width_small_width.setter
    def fixed_width_small_width(self, fixed_width_small_width):
        """
        Sets the fixed_width_small_width of this RandomGif.

        :param fixed_width_small_width: The fixed_width_small_width of this RandomGif.
        :type: str
        """

        self._fixed_width_small_width = fixed_width_small_width

    @property
    def fixed_width_small_height(self):
        """
        Gets the fixed_width_small_height of this RandomGif.

        :return: The fixed_width_small_height of this RandomGif.
        :rtype: str
        """
        return self._fixed_width_small_height

    @fixed_width_small_height.setter
    def fixed_width_small_height(self, fixed_width_small_height):
        """
        Sets the fixed_width_small_height of this RandomGif.

        :param fixed_width_small_height: The fixed_width_small_height of this RandomGif.
        :type: str
        """

        self._fixed_width_small_height = fixed_width_small_height

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, RandomGif):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
